{"ast":null,"code":"var _jsxFileName = \"/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/DataContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUsers] = useState(JSON.parse(localStorage.getItem(\"users\")) || []);\n  const [todo, setTodo] = useState(JSON.parse(localStorage.getItem(\"todo\")) || []);\n  const [subjects, setSubjects] = useState(JSON.parse(localStorage.getItem(\"subjects\")) || []);\n  const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem(\"login\")) || null);\n\n  // Load state from local storage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"users\");\n    if (storedData) {\n      setUsers(JSON.parse(storedData));\n    }\n  }, []);\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"login\");\n    if (storedData) {\n      setLoggedIn(JSON.parse(storedData));\n    }\n  }, []);\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"todos\");\n    if (storedData) {\n      setTodo(JSON.parse(storedData));\n    }\n  }, []);\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"subjects\");\n    if (storedData) {\n      setSubjects(JSON.parse(storedData));\n    }\n  }, []);\n\n  // Save state to local storage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  useEffect(() => {\n    localStorage.setItem(\"login\", JSON.stringify(loggedIn));\n  }, [loggedIn]);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todo));\n  }, [todo]);\n  useEffect(() => {\n    localStorage.setItem(\"subjects\", JSON.stringify(subjects));\n  }, [subjects]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      users,\n      setUsers,\n      todo,\n      setTodo,\n      subjects,\n      setSubjects,\n      loggedIn,\n      setLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"XHYLrJEgqOpam7eYnsHuK4eS2U4=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","users","setUsers","JSON","parse","localStorage","getItem","todo","setTodo","subjects","setSubjects","loggedIn","setLoggedIn","storedData","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/DataContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create the context\r\nexport const DataContext = createContext();\r\n\r\n// Create a provider component\r\nexport const DataProvider = ({ children }) => {\r\n  const [users, setUsers] = useState(\r\n    JSON.parse(localStorage.getItem(\"users\")) || []\r\n  );\r\n  const [todo, setTodo] = useState(\r\n    JSON.parse(localStorage.getItem(\"todo\")) || []\r\n  );\r\n  const [subjects, setSubjects] = useState(\r\n    JSON.parse(localStorage.getItem(\"subjects\")) || []\r\n  );\r\n\r\n  const [loggedIn, setLoggedIn] = useState(\r\n    JSON.parse(localStorage.getItem(\"login\")) || null\r\n  );\r\n\r\n  // Load state from local storage on component mount\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem(\"users\");\r\n    if (storedData) {\r\n      setUsers(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem(\"login\");\r\n    if (storedData) {\r\n      setLoggedIn(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem(\"todos\");\r\n    if (storedData) {\r\n      setTodo(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem(\"subjects\");\r\n    if (storedData) {\r\n      setSubjects(JSON.parse(storedData));\r\n    }\r\n  }, []);\r\n\r\n  // Save state to local storage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"login\", JSON.stringify(loggedIn));\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todo));\r\n  }, [todo]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"subjects\", JSON.stringify(subjects));\r\n  }, [subjects]);\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        users,\r\n        setUsers,\r\n        todo,\r\n        setTodo,\r\n        subjects,\r\n        setSubjects,\r\n        loggedIn,\r\n        setLoggedIn,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}