{"ast":null,"code":"var _s = $RefreshSig$();\nimport \"../CSS/Todo.css\";\nimport { DataContext } from \"../DataContext\";\nimport { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nfunction Todo() {\n  _s();\n  const {\n    loggedIn,\n    setLoggedIn\n  } = useContext(DataContext);\n  const navigate = useNavigate();\n\n  //checks if user is logged in or not, if not go to login page\n  useEffect(() => {\n    if (!loggedIn) navigate(\"/login\");\n  }, [loggedIn, navigate]);\n\n  //using persisting data \"context\", instead of using useState the todo items\n  //just use the states declared from the DataContext file, sample below\n\n  //imbis na [todo,setTodo] = useState(null); yung from context nalang na ganto\n\n  const {\n    todo,\n    setTodo\n  } = useContext(DataContext);\n}\n_s(Todo, \"xF9uHz8gMP8UX0q7FgnraNl4as8=\", false, function () {\n  return [useNavigate];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["DataContext","useContext","useEffect","useNavigate","React","Component","Todo","_s","loggedIn","setLoggedIn","navigate","todo","setTodo","_c","$RefreshReg$"],"sources":["/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/Pages/Todo.js"],"sourcesContent":["import \"../CSS/Todo.css\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nfunction Todo() {\r\n  const { loggedIn, setLoggedIn } = useContext(DataContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //checks if user is logged in or not, if not go to login page\r\n  useEffect(() => {\r\n    if (!loggedIn) navigate(\"/login\");\r\n  }, [loggedIn, navigate]);\r\n\r\n  //using persisting data \"context\", instead of using useState the todo items\r\n  //just use the states declared from the DataContext file, sample below\r\n\r\n  //imbis na [todo,setTodo] = useState(null); yung from context nalang na ganto\r\n\r\n  const { todo, setTodo } = useContext(DataContext); \r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":";AAAA,OAAO,iBAAiB;AACxB,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGR,UAAU,CAACD,WAAW,CAAC;EAEzD,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,QAAQ,EAAEE,QAAQ,CAAC,QAAQ,CAAC;EACnC,CAAC,EAAE,CAACF,QAAQ,EAAEE,QAAQ,CAAC,CAAC;;EAExB;EACA;;EAEA;;EAEA,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACD,WAAW,CAAC;AACnD;AAACO,EAAA,CAhBQD,IAAI;EAAA,QAGMH,WAAW;AAAA;AAAAU,EAAA,GAHrBP,IAAI;AAkBb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}