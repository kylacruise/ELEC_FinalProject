{"ast":null,"code":"var _jsxFileName = \"/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/Pages/Pomodoro.js\",\n  _s = $RefreshSig$();\nimport \"../CSS/Pomodoro.css\";\nimport { DataContext } from \"../DataContext\";\nimport { useContext, useEffect, useCallback, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaUser, FaLock } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pomodoro() {\n  _s();\n  const {\n    loggedIn\n  } = useContext(DataContext);\n  const navigate = useNavigate();\n\n  //checks if user is logged in or not, if not go to login page\n  useEffect(() => {\n    if (!loggedIn) navigate(\"/login\");\n  }, [loggedIn, navigate]);\n  const [seconds, setSeconds] = useState(1500);\n  const [resetSeconds, setResetSeconds] = useState(seconds);\n  const [timing, setTiming] = useState(false);\n\n  //use ref is parang state din na pwede mag store ng values\n  //sakanya isstore yung parang timer function\n  const intervalRef = useRef(null);\n  const startTimer = useCallback(() => {\n    //if ongoing yung timer, bawal istart uli\n    if (timing && seconds === 0) return;\n\n    //set timing to true para alam ng app na ongoing si timer\n    setTiming(true);\n\n    //setInterval is yung function na continuously nag rrun until istop\n    intervalRef.current = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(prevSeconds => {\n          if (prevSeconds - 1 === 0) setTiming(false);\n          return prevSeconds - 1;\n        });\n      }\n    }, 1000);\n\n    //clearInterval yung pang stop ng timer\n    return () => clearInterval(intervalRef.current);\n  }, [seconds, timing]);\n\n  //calls the interval function (yungtimer) tas rinereset, parang setState\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n  };\n\n  //computes for the minutes and seconds so it can be displayed as \n  //mm:ss\n  //input is in seconds\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoroBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          stopTimer();\n          setSeconds(1500);\n          setResetSeconds(1500);\n        },\n        children: \"Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          stopTimer();\n          setSeconds(300);\n          setResetSeconds(300);\n        },\n        children: \"Short Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          stopTimer();\n          setSeconds(900);\n          setResetSeconds(900);\n        },\n        children: \"Long Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: formatTime(seconds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"smallb\",\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"smallb\",\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"smallb\",\n        onClick: () => {\n          stopTimer();\n          setSeconds(resetSeconds);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Pomodoro, \"XNMfV+NxptYjoxB41zNsTSp8UrI=\", false, function () {\n  return [useNavigate];\n});\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["DataContext","useContext","useEffect","useCallback","useState","useRef","useNavigate","FaUser","FaLock","jsxDEV","_jsxDEV","Pomodoro","_s","loggedIn","navigate","seconds","setSeconds","resetSeconds","setResetSeconds","timing","setTiming","intervalRef","startTimer","current","setInterval","prevSeconds","clearInterval","stopTimer","formatTime","time","minutes","Math","floor","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/Pages/Pomodoro.js"],"sourcesContent":["import \"../CSS/Pomodoro.css\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport { useContext, useEffect, useCallback, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { FaUser, FaLock } from \"react-icons/fa\";\r\nfunction Pomodoro() {\r\n  const { loggedIn } = useContext(DataContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //checks if user is logged in or not, if not go to login page\r\n  useEffect(() => {\r\n    if (!loggedIn) navigate(\"/login\");\r\n  }, [loggedIn, navigate]);\r\n\r\n  const [seconds, setSeconds] = useState(1500);\r\n\r\n  const [resetSeconds, setResetSeconds] = useState(seconds);\r\n\r\n  const [timing, setTiming] = useState(false);\r\n\r\n\r\n  //use ref is parang state din na pwede mag store ng values\r\n  //sakanya isstore yung parang timer function\r\n  const intervalRef = useRef(null);\r\n\r\n  const startTimer = useCallback(() => {\r\n\r\n    //if ongoing yung timer, bawal istart uli\r\n    if (timing && seconds === 0) return;\r\n\r\n    //set timing to true para alam ng app na ongoing si timer\r\n    setTiming(true);\r\n\r\n    //setInterval is yung function na continuously nag rrun until istop\r\n    intervalRef.current = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(prevSeconds => {\r\n          if (prevSeconds - 1 === 0)\r\n            setTiming(false);\r\n          return prevSeconds - 1\r\n        });\r\n\r\n      }\r\n    }, 1000);\r\n\r\n    //clearInterval yung pang stop ng timer\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [seconds, timing]);\r\n\r\n  //calls the interval function (yungtimer) tas rinereset, parang setState\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n  };\r\n\r\n  //computes for the minutes and seconds so it can be displayed as \r\n  //mm:ss\r\n  //input is in seconds\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"pomodoroBody\">\r\n      <div className=\"buttons\">\r\n        <button className=\"button\" onClick={() => {\r\n          stopTimer();\r\n          setSeconds(1500);\r\n          setResetSeconds(1500);\r\n        }}>Work</button>\r\n        <button className=\"button\" onClick={() => {\r\n          stopTimer();\r\n          setSeconds(300)\r\n          setResetSeconds(300);\r\n        }}>Short Break</button>\r\n        <button className=\"button\" onClick={() => {\r\n          stopTimer();\r\n          setSeconds(900);\r\n          setResetSeconds(900);\r\n        }}>Long Break</button>\r\n      </div>\r\n      <div className=\"timer\">{formatTime(seconds)}</div>\r\n      <div className=\"buttons\">\r\n        <button className=\"smallb\" onClick={startTimer}>Start</button>\r\n        <button className=\"smallb\" onClick={stopTimer}>Stop</button>\r\n        <button className=\"smallb\" onClick={() => {\r\n          stopTimer();\r\n          setSeconds(resetSeconds)\r\n        }}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}