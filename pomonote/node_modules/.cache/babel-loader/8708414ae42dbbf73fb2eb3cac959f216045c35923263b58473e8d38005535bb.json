{"ast":null,"code":"var _jsxFileName = \"/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/Pages/Todo.js\",\n  _s = $RefreshSig$();\nimport \"../CSS/Todo.css\";\nimport { DataContext } from \"../DataContext\";\n//import { useContext, useEffect } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n//import React, { Component } from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [sortByChecked, setSortByChecked] = useState(false);\n  const updateInput = value => {\n    setUserInput(value);\n  };\n  const addItem = () => {\n    if (userInput.trim() !== \"\") {\n      const newItem = {\n        id: Math.random(),\n        value: userInput.trim(),\n        done: false,\n        date: new Date().toLocaleDateString() // Add the date when adding a task\n      };\n      setList([...list, newItem]);\n      setUserInput(\"\");\n    }\n  };\n  const deleteItem = key => {\n    const updatedList = list.filter(item => item.id !== key);\n    setList(updatedList);\n  };\n  const markAsDone = index => {\n    const updatedList = [...list];\n    updatedList[index].done = !updatedList[index].done;\n    setList(updatedList);\n  };\n  const editItem = index => {\n    const editedTodo = prompt('Edit the task:', list[index].value);\n    if (editedTodo !== null && editedTodo.trim() !== '') {\n      const updatedList = [...list];\n      updatedList[index].value = editedTodo.trim();\n      setList(updatedList);\n    }\n  };\n  const clearTasks = () => {\n    setList([]);\n  };\n  const handleSortByChecked = () => {\n    setSortByChecked(!sortByChecked);\n  };\n  const sortedList = sortByChecked ? [...list].sort((a, b) => a.done - b.done) : list;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addTask\",\n          type: \"text\",\n          placeholder: \"add task . . .\",\n          value: userInput,\n          onChange: e => updateInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addButton\",\n          type: \"button\",\n          value: \"ADD\",\n          onClick: addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"clearButton\",\n          type: \"button\",\n          value: \"CLEAR\",\n          onClick: clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: handleSortByChecked,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Sort by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"checked\",\n            children: \"Sort by checked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskList\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"eachTask\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"taskRow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dateColumn\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"taskColumn\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spanTask\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: item.done ? 'line-through' : 'none'\n                    },\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btnContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"doneButton\",\n                  type: \"button\",\n                  value: \"\\u2714\",\n                  onClick: () => markAsDone(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"doneButton\",\n                  type: \"button\",\n                  value: \"\\u270E\",\n                  onClick: () => editItem(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"doneButton\",\n                  type: \"button\",\n                  value: \"\\u2716\",\n                  onClick: () => deleteItem(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"xvFFumyh+hYK5pYDrXNdALoG+t8=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["DataContext","React","useState","useContext","jsxDEV","_jsxDEV","Todo","_s","userInput","setUserInput","list","setList","sortByChecked","setSortByChecked","updateInput","value","addItem","trim","newItem","id","Math","random","done","date","Date","toLocaleDateString","deleteItem","key","updatedList","filter","item","markAsDone","index","editItem","editedTodo","prompt","clearTasks","handleSortByChecked","sortedList","sort","a","b","children","className","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/kylacruz/Documents/GitHub/ELEC_FinalProject/pomonote/src/Pages/Todo.js"],"sourcesContent":["import \"../CSS/Todo.css\";\r\nimport { DataContext } from \"../DataContext\";\r\n//import { useContext, useEffect } from \"react\";\r\n//import { useNavigate } from \"react-router-dom\";\r\n//import React, { Component } from \"react\";\r\nimport React, { useState, useContext } from \"react\";\r\n\r\n\r\nfunction Todo() {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n  const [sortByChecked, setSortByChecked] = useState(false);\r\n\r\n  const updateInput = (value) => {\r\n    setUserInput(value);\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (userInput.trim() !== \"\") {\r\n      const newItem = {\r\n        id: Math.random(),\r\n        value: userInput.trim(),\r\n        done: false,\r\n        date: new Date().toLocaleDateString(), // Add the date when adding a task\r\n      };\r\n      setList([...list, newItem]);\r\n      setUserInput(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteItem = (key) => {\r\n    const updatedList = list.filter((item) => item.id !== key);\r\n    setList(updatedList);\r\n  };\r\n\r\n  const markAsDone = (index) => {\r\n    const updatedList = [...list];\r\n    updatedList[index].done = !updatedList[index].done;\r\n    setList(updatedList);\r\n  };\r\n\r\n  const editItem = (index) => {\r\n    const editedTodo = prompt('Edit the task:', list[index].value);\r\n    if (editedTodo !== null && editedTodo.trim() !== '') {\r\n      const updatedList = [...list];\r\n      updatedList[index].value = editedTodo.trim();\r\n      setList(updatedList);\r\n    }\r\n  };\r\n\r\n  const clearTasks = () => {\r\n    setList([]);\r\n  };\r\n\r\n  const handleSortByChecked = () => {\r\n    setSortByChecked(!sortByChecked);\r\n  };\r\n\r\n  const sortedList = sortByChecked ? [...list].sort((a, b) => a.done - b.done) : list;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bodyTask\">\r\n        <div className=\"\">\r\n          <input\r\n            className=\"addTask\"\r\n            type=\"text\"\r\n            placeholder=\"add task . . .\"\r\n            value={userInput}\r\n            onChange={(e) => updateInput(e.target.value)}\r\n          />\r\n          <input\r\n            className=\"addButton\"\r\n            type=\"button\"\r\n            value=\"ADD\"\r\n            onClick={addItem}\r\n          />\r\n          <input\r\n            className=\"clearButton\"\r\n            type=\"button\"\r\n            value=\"CLEAR\"\r\n            onClick={clearTasks}\r\n          />\r\n          <select className=\"custom-select\" onChange={handleSortByChecked}>\r\n            <option value=\"\">Sort by</option>\r\n            <option value=\"checked\">Sort by checked</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"taskList\">\r\n          <ul>\r\n            {sortedList.map((item, index) => (\r\n              <li key={index} className=\"eachTask\">\r\n                <div className=\"taskRow\">\r\n                  <div className=\"dateColumn\">{item.date}</div>\r\n                  <div className=\"taskColumn\">\r\n                    <div className=\"spanTask\">\r\n                      <span style={{ textDecoration: item.done ? 'line-through' : 'none' }}>\r\n                        {item.value}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"btnContainer\">\r\n                    <input\r\n                      className=\"doneButton\"\r\n                      type=\"button\"\r\n                      value=\"✔\"\r\n                      onClick={() => markAsDone(index)}\r\n                    />\r\n                    <input\r\n                      className=\"doneButton\"\r\n                      type=\"button\"\r\n                      value=\"✎\"\r\n                      onClick={() => editItem(index)}\r\n                    />\r\n                    <input\r\n                      className=\"doneButton\"\r\n                      type=\"button\"\r\n                      value=\"✖\"\r\n                      onClick={() => deleteItem(item.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}